// Auto-generated by https://github.com/react-spring/gltfjsx

import React, { useRef } from 'react'
import { useLoader, useFrame } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import { a } from 'react-spring/three'

export default function Model({ position, rotation }) {
  const group = useRef()
  const { nodes, materials } = useLoader(GLTFLoader, '/laptop/scene.gltf')
  useFrame(({ clock }) => {
    group.current.position.x = Math.sin(clock.getElapsedTime()) * 1

  })
  return (
    <a.group ref={group} position={position} rotation={rotation} dispose={null}>
      <scene name="OSG_Scene">
        <group name="RootNode_(gltf_orientation_matrix)" rotation={[-Math.PI / 3, 0.1, -0.4]}>
          <group name="RootNode_(model_correction_matrix)">
            <group name="Root">
              <group name="Plane">
                <mesh material={materials['Root']} geometry={nodes['Plane_0'].geometry} name="Plane_0" >
                  <meshPhysicalMaterial attach="material" color="#fff" transparent opacity={0.5} />
                </mesh>
              </group>
              <a.group position={[0, 0, 0]} name="Plane001">
                <mesh material={materials['Root']} geometry={nodes['Plane001_0'].geometry} name="Plane001_0">
                  <meshPhysicalMaterial attach="material" color="#494c7a" transparent opacity={1} />
                </mesh>
              </a.group>
              {/* <group
                name="Cylinder"
                position={[0.01, 2.67, 0.2]}
                rotation={[0, Math.PI / 2, 0]}
                scale={[0.16, 0.28, 3.31]}>
                <mesh geometry={nodes['Cylinder_0'].geometry} name="Cylinder_0">
                  <meshPhysicalMaterial attach="material" color="#494c7a" />
                </mesh>
              </group> */}
              <group
                name="Cylinder002"
                position={[-3.7, 2.8, 0.08]}
                rotation={[0, Math.PI / 2, 0]}
                scale={[0.16, 0.16, 0.26]}>
                <mesh geometry={nodes['Cylinder002_0'].geometry} name="Cylinder002_0">
                  <meshPhysicalMaterial attach="material" color="#fff" transparent opacity={0.5} />
                </mesh>
              </group>
            </group>
          </group>
        </group>
      </scene>
    </a.group>
  )
}
